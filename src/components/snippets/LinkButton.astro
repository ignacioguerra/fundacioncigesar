---
interface Props {
	text?: string;
	href: string;
	external?: boolean;
	reversed?: boolean;
	style?: 'link'|'light'|'dark'|'page-color';
}

const { text, href, external, style } = Astro.props;
const target = external ? '_blank' : '_self'
const hasText = !!text
---

<a href={href} target={target} class:list={["link-button",`link-button--${style||'default'}`,{"link-button--without-text": !hasText}]}>
	<slot></slot>
	<span class="link-button__text">{ text }</span>
	<slot name="right">
</a>

<style is:global>
	.link-button {
		position: relative;
		display: flex;
		width: fit-content;
		align-items: center;
		gap: 1rem;
		padding: 0.75rem 1.5rem;
		border-radius: 3rem;
		border: 1px solid transparent;
		background-color: var(--page-primary-color);
		
		font-size: 1.625em;
		font-weight: var(--font-weight-bold);
		text-decoration: none;
		color: var(--gray-900);
		/* margin-top: 3rem; */
		overflow: hidden;

		transition: border-color 100ms ease-out, background-color 100ms ease-out;

		* {
			position: relative;
			z-index: 1;
		}

		&::before {
			content: "";
			position: absolute;
			top: 50%;
			left: 50%;
			width: 100%;
			aspect-ratio: 1;
			border-radius: 100%;
			background-color: var(--gray-600);
			transform: translate(-50%,-50%);
			opacity: 0;
			z-index: 0;
		}
		&:hover::before {
			animation: shadow-in 600ms ease-in-out;
			@keyframes shadow-in {
				0% { opacity: 0; transform:translate(-50%,-50%) scale(0);  }
				50% { opacity: .3; transform:translate(-50%,-50%) scale(1); }
				100% { opacity: 0; transform:translate(-50%,-50%) scale(1); }
			}
		}

		&--default, &--page-color {
			background-color: var(--page-primary-color);
			color: var(--page-contrasting-color);
			&:hover {
				border-color: var(--gray-300);
			}
			&::before {
				background-color: var(--gray-600);
			}
		}
		&--link {
			background-color: transparent;
			color: inherit;
			text-decoration: underline;
			&:hover {
				border-color: var(--gray-300);
			}
			&::before {
				background-color: var(--gray-400);
			}
		}
		&--light {
			background-color: var(--white);
			border-color: var(--gray-300);
			color: var(--gray-900);
			&:hover {
				border-color: var(--gray-400);
				background-color: var(--gray-50);
			}
			&::before {
				background-color: var(--gray-400);
			}
		}
		&--dark {
			background-color: var(--gray-900);
			color: var(--white);
			&:hover {
				border-color: var(--gray-300);
			}
			&::before {
				background-color: var(--white);
			}
		}

		&--without-text {
			padding: 0.75rem;
		}

		

		

		&__text {
			font-size: 1rem;

			&:empty {
				display: none;
			}
		}
	}
</style>
