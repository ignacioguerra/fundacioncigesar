---
import IconYoutube from '../icons/IconYoutube.astro';
import ScrollContext from '../snippets/ScrollContext.astro';
import YoutubeEmbed from './YoutubeEmbed.astro';

interface Props {
	videoId: string;
	title?:string;
	width: number;
	height: number;
	poster?: string;
	autoplay?:boolean;
}

const { videoId, width, height, poster, title, autoplay=false } = Astro.props;
// const embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1&amp;controls=0&amp;modestbranding=1&amp;rel=0&amp;showinfo=0`;
// const placeholderSize = `0 0 ${width} ${height}`;
---

<youtube-player class="yt-player" autoplay={autoplay}>
	<YoutubeEmbed videoId={videoId} width={width} height={height} autoplay={autoplay} title={title} />
	<ScrollContext>
		<img  class="yt-player__poster sc-map-position" src={poster} alt={title} width={width} height={height}>	
	</ScrollContext>
	<div class="yt-player__play-button">
		<IconYoutube />
	</div>
</youtube-player>
<script>
	class YoutubePlayer extends HTMLElement {
    constructor() {
      super();
			if(!this.hasAttribute('autoplay')) this.addEventListener('click', () => {
				const player = this.querySelector('youtube-embed')
				player.play()
			}, { once: true })
    }
  }
  customElements.define('youtube-player', YoutubePlayer)
</script>
<style>
	.yt-player {
		display: block;
		position: relative;
		overflow: hidden;
		border-radius: var(--border-radius);
		border: 1px solid var(--border-color);

		/* &__placeholder {
			display: block;
		} */

		:global(youtube-embed) {
			position: relative;
			z-index: 2;
		}

		&__poster {
			display: block;
			position: absolute;
			top: 0;
			width: 100%;
			height: calc(100% + 100px);
			object-fit: cover;
			
			--sc-map-position-from: -50px;
			--sc-map-position-to: 50px;
			transform: translate3d(0,var(--sc-new-position),0);
		}

		/* &__player {
			display: block;
			width: 100%;
			height: 100%;
			position: absolute;
			left: 0;
			right: 0;
			bottom: 0;
			top: 0;
			display: none;
			z-index: 2;
		} */

		/* &::after {
			content: "";
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			cursor: pointer;
			z-index: 5;
			background-color: var(--gray-900);
			opacity: 0;
		} */

		&__play-button {
			position: absolute;
			font-size: 6rem;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			display: flex;
			justify-content: center;
			align-items: center;
			color: rgba(255,255,255,.8);
			background-color: rgba(0,0,0,.1);
			filter: drop-shadow(0 6px 4px rgba(0,0,0,.25));
			transform: translate(-50%,-50%,0);
			text-align: center;
			cursor: pointer;
			transition: color 200ms ease-out, background-color 200ms ease-in-out;

			&:hover {
				color: rgba(255,255,255,.9);
				background-color: rgba(0,0,0,.15);
			}
		}
	}
</style>
