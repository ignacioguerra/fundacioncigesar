---
interface Props {
	videoId: string;
	title?:string;
	width: number;
	height: number;
	autoplay?:boolean;
}

const { videoId, width, height, title, autoplay } = Astro.props;
const embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1&amp;controls=0&amp;modestbranding=1&amp;rel=0&amp;showinfo=0`;
const placeholderSize = `0 0 ${width} ${height}`;
---

<youtube-embed class="yt-embed" video-url={embedUrl} autoplay={autoplay}>
	<svg class="yt-embed__placeholder" viewBox={placeholderSize}></svg>
	<iframe
		class="yt-embed__player" 
		src={autoplay ? embedUrl : ''}
		width={width}
		height={height}
		title={title} 
		frameborder="0"
		allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
		allowfullscreen
	></iframe>
</youtube-embed>
<script>
	class YoutubeEmbed extends HTMLElement {
		private _player:HTMLElement

    constructor() {
      super()
			this._player =  this.querySelector('iframe')
			if(this.hasAttribute('autoplay')) this.play()
			else this.addEventListener('click', this.play.bind(this), { once: true })
    }
		public play() {
			const videoUrl = this.getAttribute('video-url')
			this.classList.toggle('active', true)
			this._player.setAttribute('src', videoUrl)
		}
		public stop() {
			this.classList.toggle('active', false)
			this._player.removeAttribute('src')
		}
  }
  customElements.define('youtube-embed', YoutubeEmbed)
</script>
<style>
	.yt-embed {
		display: block;
		position: relative;
		overflow: hidden;
		pointer-events: none;

		&__placeholder {
			display: block;
		}

		&__player {
			width: 100%;
			height: 100%;
			position: absolute;
			left: 0;
			right: 0;
			bottom: 0;
			top: 0;
			pointer-events: all;
			display: none;
			/* z-index: 2; */
		}

		&.active &__player {
			display: block;
		}
	}
</style>
